(function() {
  var MINIMUM_AUTO_UPDATE_BLOCK_DURATION_MINUTES, NAMESPACE, PackageUpdater, WARMUP_WAIT, fs, getFs, path;

  fs = null;

  path = null;

  PackageUpdater = null;

  getFs = function() {
    return fs != null ? fs : fs = require('fs-plus');
  };

  NAMESPACE = 'auto-update-packages';

  WARMUP_WAIT = 10 * 1000;

  MINIMUM_AUTO_UPDATE_BLOCK_DURATION_MINUTES = 15;

  module.exports = {
    config: {
      intervalMinutes: {
        type: 'integer',
        minimum: MINIMUM_AUTO_UPDATE_BLOCK_DURATION_MINUTES,
        "default": 6 * 60,
        title: 'Auto-Update Interval Minutes'
      }
    },
    activate: function(state) {
      var commands;
      commands = {};
      commands["" + NAMESPACE + ":update-now"] = (function(_this) {
        return function() {
          return _this.updatePackages(false);
        };
      })(this);
      this.commandSubscription = atom.commands.add('atom-workspace', commands);
      return setTimeout((function(_this) {
        return function() {
          return _this.enableAutoUpdate();
        };
      })(this), WARMUP_WAIT);
    },
    deactivate: function() {
      var _ref;
      this.disableAutoUpdate();
      if ((_ref = this.commandSubscription) != null) {
        _ref.dispose();
      }
      return this.commandSubscription = null;
    },
    enableAutoUpdate: function() {
      this.updatePackagesIfAutoUpdateBlockIsExpired();
      this.autoUpdateCheck = setInterval((function(_this) {
        return function() {
          return _this.updatePackagesIfAutoUpdateBlockIsExpired();
        };
      })(this), this.getAutoUpdateCheckInterval());
      return this.configSubscription = atom.config.onDidChange((function(_this) {
        return function() {
          _this.disableAutoUpdate();
          return _this.enableAutoUpdate();
        };
      })(this));
    },
    disableAutoUpdate: function() {
      var _ref;
      if ((_ref = this.configSubscription) != null) {
        _ref.dispose();
      }
      this.configSubscription = null;
      if (this.autoUpdateCheck) {
        clearInterval(this.autoUpdateCheck);
      }
      return this.autoUpdateCheck = null;
    },
    updatePackagesIfAutoUpdateBlockIsExpired: function() {
      var lastUpdateTime;
      lastUpdateTime = this.loadLastUpdateTime() || 0;
      if (Date.now() > lastUpdateTime + this.getAutoUpdateBlockDuration()) {
        return this.updatePackages();
      }
    },
    updatePackages: function(isAutoUpdate) {
      if (isAutoUpdate == null) {
        isAutoUpdate = true;
      }
      if (PackageUpdater == null) {
        PackageUpdater = require('./package-updater');
      }
      PackageUpdater.updatePackages(isAutoUpdate);
      return this.saveLastUpdateTime();
    },
    getAutoUpdateBlockDuration: function() {
      var minutes;
      minutes = atom.config.get("" + NAMESPACE + ".intervalMinutes");
      if (isNaN(minutes) || minutes < MINIMUM_AUTO_UPDATE_BLOCK_DURATION_MINUTES) {
        minutes = MINIMUM_AUTO_UPDATE_BLOCK_DURATION_MINUTES;
      }
      return minutes * 60 * 1000;
    },
    getAutoUpdateCheckInterval: function() {
      return this.getAutoUpdateBlockDuration() / 15;
    },
    loadLastUpdateTime: function() {
      var string;
      try {
        string = getFs().readFileSync(this.getLastUpdateTimeFilePath());
        return parseInt(string);
      } catch (_error) {
        return null;
      }
    },
    saveLastUpdateTime: function() {
      return getFs().writeFileSync(this.getLastUpdateTimeFilePath(), Date.now().toString());
    },
    getLastUpdateTimeFilePath: function() {
      var dotAtomPath;
      if (path == null) {
        path = require('path');
      }
      dotAtomPath = getFs().absolute('~/.atom');
      return path.join(dotAtomPath, 'storage', "" + NAMESPACE + "-last-update-time");
    }
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL1VzZXJzL2hhY28vLmF0b20vcGFja2FnZXMvYXV0by11cGRhdGUtcGFja2FnZXMvbGliL2F1dG8tdXBkYXRlLXBhY2thZ2VzLmNvZmZlZSIKICBdLAogICJuYW1lcyI6IFtdLAogICJtYXBwaW5ncyI6ICJBQUFBO0FBQUEsTUFBQSxtR0FBQTs7QUFBQSxFQUFBLEVBQUEsR0FBSyxJQUFMLENBQUE7O0FBQUEsRUFDQSxJQUFBLEdBQU8sSUFEUCxDQUFBOztBQUFBLEVBRUEsY0FBQSxHQUFpQixJQUZqQixDQUFBOztBQUFBLEVBSUEsS0FBQSxHQUFRLFNBQUEsR0FBQTt3QkFDTixLQUFBLEtBQU0sT0FBQSxDQUFRLFNBQVIsRUFEQTtFQUFBLENBSlIsQ0FBQTs7QUFBQSxFQU9BLFNBQUEsR0FBWSxzQkFQWixDQUFBOztBQUFBLEVBUUEsV0FBQSxHQUFjLEVBQUEsR0FBSyxJQVJuQixDQUFBOztBQUFBLEVBU0EsMENBQUEsR0FBNkMsRUFUN0MsQ0FBQTs7QUFBQSxFQVdBLE1BQU0sQ0FBQyxPQUFQLEdBQ0U7QUFBQSxJQUFBLE1BQUEsRUFDRTtBQUFBLE1BQUEsZUFBQSxFQUNFO0FBQUEsUUFBQSxJQUFBLEVBQU0sU0FBTjtBQUFBLFFBQ0EsT0FBQSxFQUFTLDBDQURUO0FBQUEsUUFFQSxTQUFBLEVBQVMsQ0FBQSxHQUFJLEVBRmI7QUFBQSxRQUdBLEtBQUEsRUFBTyw4QkFIUDtPQURGO0tBREY7QUFBQSxJQU9BLFFBQUEsRUFBVSxTQUFDLEtBQUQsR0FBQTtBQUNSLFVBQUEsUUFBQTtBQUFBLE1BQUEsUUFBQSxHQUFXLEVBQVgsQ0FBQTtBQUFBLE1BQ0EsUUFBUyxDQUFBLEVBQUEsR0FBRyxTQUFILEdBQWEsYUFBYixDQUFULEdBQXNDLENBQUEsU0FBQSxLQUFBLEdBQUE7ZUFBQSxTQUFBLEdBQUE7aUJBQUcsS0FBQyxDQUFBLGNBQUQsQ0FBZ0IsS0FBaEIsRUFBSDtRQUFBLEVBQUE7TUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBRHRDLENBQUE7QUFBQSxNQUVBLElBQUMsQ0FBQSxtQkFBRCxHQUF1QixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQWQsQ0FBa0IsZ0JBQWxCLEVBQW9DLFFBQXBDLENBRnZCLENBQUE7YUFJQSxVQUFBLENBQVcsQ0FBQSxTQUFBLEtBQUEsR0FBQTtlQUFBLFNBQUEsR0FBQTtpQkFDVCxLQUFDLENBQUEsZ0JBQUQsQ0FBQSxFQURTO1FBQUEsRUFBQTtNQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBWCxFQUVFLFdBRkYsRUFMUTtJQUFBLENBUFY7QUFBQSxJQWdCQSxVQUFBLEVBQVksU0FBQSxHQUFBO0FBQ1YsVUFBQSxJQUFBO0FBQUEsTUFBQSxJQUFDLENBQUEsaUJBQUQsQ0FBQSxDQUFBLENBQUE7O1lBQ29CLENBQUUsT0FBdEIsQ0FBQTtPQURBO2FBRUEsSUFBQyxDQUFBLG1CQUFELEdBQXVCLEtBSGI7SUFBQSxDQWhCWjtBQUFBLElBcUJBLGdCQUFBLEVBQWtCLFNBQUEsR0FBQTtBQUNoQixNQUFBLElBQUMsQ0FBQSx3Q0FBRCxDQUFBLENBQUEsQ0FBQTtBQUFBLE1BRUEsSUFBQyxDQUFBLGVBQUQsR0FBbUIsV0FBQSxDQUFZLENBQUEsU0FBQSxLQUFBLEdBQUE7ZUFBQSxTQUFBLEdBQUE7aUJBQzdCLEtBQUMsQ0FBQSx3Q0FBRCxDQUFBLEVBRDZCO1FBQUEsRUFBQTtNQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBWixFQUVqQixJQUFDLENBQUEsMEJBQUQsQ0FBQSxDQUZpQixDQUZuQixDQUFBO2FBTUEsSUFBQyxDQUFBLGtCQUFELEdBQXNCLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBWixDQUF3QixDQUFBLFNBQUEsS0FBQSxHQUFBO2VBQUEsU0FBQSxHQUFBO0FBQzVDLFVBQUEsS0FBQyxDQUFBLGlCQUFELENBQUEsQ0FBQSxDQUFBO2lCQUNBLEtBQUMsQ0FBQSxnQkFBRCxDQUFBLEVBRjRDO1FBQUEsRUFBQTtNQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBeEIsRUFQTjtJQUFBLENBckJsQjtBQUFBLElBZ0NBLGlCQUFBLEVBQW1CLFNBQUEsR0FBQTtBQUNqQixVQUFBLElBQUE7O1lBQW1CLENBQUUsT0FBckIsQ0FBQTtPQUFBO0FBQUEsTUFDQSxJQUFDLENBQUEsa0JBQUQsR0FBc0IsSUFEdEIsQ0FBQTtBQUdBLE1BQUEsSUFBbUMsSUFBQyxDQUFBLGVBQXBDO0FBQUEsUUFBQSxhQUFBLENBQWMsSUFBQyxDQUFBLGVBQWYsQ0FBQSxDQUFBO09BSEE7YUFJQSxJQUFDLENBQUEsZUFBRCxHQUFtQixLQUxGO0lBQUEsQ0FoQ25CO0FBQUEsSUF1Q0Esd0NBQUEsRUFBMEMsU0FBQSxHQUFBO0FBQ3hDLFVBQUEsY0FBQTtBQUFBLE1BQUEsY0FBQSxHQUFpQixJQUFDLENBQUEsa0JBQUQsQ0FBQSxDQUFBLElBQXlCLENBQTFDLENBQUE7QUFDQSxNQUFBLElBQUcsSUFBSSxDQUFDLEdBQUwsQ0FBQSxDQUFBLEdBQWEsY0FBQSxHQUFpQixJQUFDLENBQUEsMEJBQUQsQ0FBQSxDQUFqQztlQUNFLElBQUMsQ0FBQSxjQUFELENBQUEsRUFERjtPQUZ3QztJQUFBLENBdkMxQztBQUFBLElBNENBLGNBQUEsRUFBZ0IsU0FBQyxZQUFELEdBQUE7O1FBQUMsZUFBZTtPQUM5Qjs7UUFBQSxpQkFBa0IsT0FBQSxDQUFRLG1CQUFSO09BQWxCO0FBQUEsTUFDQSxjQUFjLENBQUMsY0FBZixDQUE4QixZQUE5QixDQURBLENBQUE7YUFFQSxJQUFDLENBQUEsa0JBQUQsQ0FBQSxFQUhjO0lBQUEsQ0E1Q2hCO0FBQUEsSUFpREEsMEJBQUEsRUFBNEIsU0FBQSxHQUFBO0FBQzFCLFVBQUEsT0FBQTtBQUFBLE1BQUEsT0FBQSxHQUFVLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBWixDQUFnQixFQUFBLEdBQUcsU0FBSCxHQUFhLGtCQUE3QixDQUFWLENBQUE7QUFFQSxNQUFBLElBQUcsS0FBQSxDQUFNLE9BQU4sQ0FBQSxJQUFrQixPQUFBLEdBQVUsMENBQS9CO0FBQ0UsUUFBQSxPQUFBLEdBQVUsMENBQVYsQ0FERjtPQUZBO2FBS0EsT0FBQSxHQUFVLEVBQVYsR0FBZSxLQU5XO0lBQUEsQ0FqRDVCO0FBQUEsSUF5REEsMEJBQUEsRUFBNEIsU0FBQSxHQUFBO2FBQzFCLElBQUMsQ0FBQSwwQkFBRCxDQUFBLENBQUEsR0FBZ0MsR0FETjtJQUFBLENBekQ1QjtBQUFBLElBOERBLGtCQUFBLEVBQW9CLFNBQUEsR0FBQTtBQUNsQixVQUFBLE1BQUE7QUFBQTtBQUNFLFFBQUEsTUFBQSxHQUFTLEtBQUEsQ0FBQSxDQUFPLENBQUMsWUFBUixDQUFxQixJQUFDLENBQUEseUJBQUQsQ0FBQSxDQUFyQixDQUFULENBQUE7ZUFDQSxRQUFBLENBQVMsTUFBVCxFQUZGO09BQUEsY0FBQTtlQUlFLEtBSkY7T0FEa0I7SUFBQSxDQTlEcEI7QUFBQSxJQXFFQSxrQkFBQSxFQUFvQixTQUFBLEdBQUE7YUFDbEIsS0FBQSxDQUFBLENBQU8sQ0FBQyxhQUFSLENBQXNCLElBQUMsQ0FBQSx5QkFBRCxDQUFBLENBQXRCLEVBQW9ELElBQUksQ0FBQyxHQUFMLENBQUEsQ0FBVSxDQUFDLFFBQVgsQ0FBQSxDQUFwRCxFQURrQjtJQUFBLENBckVwQjtBQUFBLElBd0VBLHlCQUFBLEVBQTJCLFNBQUEsR0FBQTtBQUN6QixVQUFBLFdBQUE7O1FBQUEsT0FBUSxPQUFBLENBQVEsTUFBUjtPQUFSO0FBQUEsTUFDQSxXQUFBLEdBQWMsS0FBQSxDQUFBLENBQU8sQ0FBQyxRQUFSLENBQWlCLFNBQWpCLENBRGQsQ0FBQTthQUVBLElBQUksQ0FBQyxJQUFMLENBQVUsV0FBVixFQUF1QixTQUF2QixFQUFrQyxFQUFBLEdBQUcsU0FBSCxHQUFhLG1CQUEvQyxFQUh5QjtJQUFBLENBeEUzQjtHQVpGLENBQUE7QUFBQSIKfQ==

//# sourceURL=/Users/haco/.atom/packages/auto-update-packages/lib/auto-update-packages.coffee
